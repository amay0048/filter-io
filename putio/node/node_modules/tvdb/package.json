{
  "author": {
    "name": "Matias Meno",
    "email": "m@tias.me"
  },
  "name": "tvdb",
  "description": "A wrapper for thetvdb.coms XML API",
  "version": "0.0.13",
  "website": "https://github.com/enyo/node-tvdb",
  "keywords": [
    "thetvdb",
    "thetvdb.com",
    "xml",
    "api"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/enyo/node-tvdb.git"
  },
  "main": "index.js",
  "scripts": {
    "test": "make test",
    "prepublish": "coffee --output lib --compile src"
  },
  "engines": {
    "node": ">=0.6.x <0.9"
  },
  "dependencies": {
    "xml2js": "0.x",
    "underscore": "1.x",
    "node-zip": "0.x"
  },
  "devDependencies": {
    "mocha": "1.x",
    "coffee-script": "1.x",
    "should": "0.x"
  },
  "readme": "# TheTVDB.com Node library Version 0.0.13\n\n\n![Build status](https://travis-ci.org/enyo/node-tvdb.png?branch=master) (Master)  \n![Build status](https://travis-ci.org/enyo/node-tvdb.png) (Development)\n\n\nIt's a wrapper for [thetvdb][]s XML API, written in [CoffeeScript][] for [node][].\nYou won't be in contact with any XML if you use this library.\n\n> The library isn't finished yet. I'll update this README as I get along so\n> you'll know what to expect.\n\nYou can check out [thetvdbs programmers API](http://thetvdb.com/wiki/index.php?title=Programmers_API)\nto know what this library will be wrapping.\n\n[node]: http://nodejs.org/\n[thetvdb]: http://www.thetvdb.com/\n[coffeescript]: http://coffeescript.org/\n\n\nThis project uses [semantic versioning](http://semver.org/) and uses this [tag script](https://github.com/enyo/tag) to tag the versions.\n\nI use the great [mocha testing framework](http://visionmedia.github.com/mocha/) with the (also great) [should assertion library](https://github.com/visionmedia/should.js) for testing.  \nIf you contribute to this project, please write a test, and make sure all existing tests pass.\n\n## Usage\n\n> First off, [get an API key from thetvdb](http://thetvdb.com/?tab=apiregister).\n> Withouth an API key you won't be able to do anything with this library.\n\n\nAll code samples are presented in both, Javascript and CoffeScript.\n\n### Include and configure the library\n\n    // JS\n    var TVDB = require(\"tvdb\")\n      , tvdb = new TVDB({ apiKey: \"YOUR_KEY\" });\n\n    # Coffee\n    TVDB = require(\"tvdb\")\n    tvdb = new TVDB apiKey: \"YOUR_KEY\"\n\nPossible configuration options are:\n\n  - `apiKey` {String}\n  - `language` {String} (optional) Default: `\"en\"`. Use getLanguages() if you want another language.\n  - `initialHost` {String} (optional) Default: `\"thetvdb.com\"`\n  - `port` {Number} (optional) Default: 80\n\n### Get available languages\n\n    // JS\n    tvdb.getLanguages(function(err, languages) {\n      if (err) return;\n      // Handle languages.\n    };\n\n    # Coffee\n    tvdb.getLanguages (err, languages) ->\n      if err? then return\n      # Handle languages\n\nTVDB uses `\"en\"` (english) as default when it fetches data. If you want another language, use this function, get the language\nyou want (or let the user decide which language s/he wants) and use the `abbreviation` as new language.\n\nTo set the language as new default, simply call:\n\n    // JS\n    tvdb.setLanguage(language.abbreviation);\n    \n    # Coffee\n    tvdb.setLanguage language.abbreviation\n\n### Get a list of mirrors\n\n    // JS\n    tvdb.getMirrors(function(err, mirrors) {\n      if (err) return;\n      // Handle mirrors.\n    });\n\n    # Coffee\n    tvdb.getMirrors (err, mirrors) ->\n      if err? then return\n      # Handle mirrors\n\nMirrors is an Array containing objects that are formatted like this:\n\n    { id: \"1\", url: \"http://thetvdb.com\", types: [ \"xml\", \"banner\", \"zip\" ] }\n\n`types` contains *at least* one of `\"xml\"`, `\"banner\"` and `\"zip\"`.\n\n\n\n### Get server time\n\n    // JS\n    tvdb.getServerTime(function(err, time) {\n      if (err) return;\n      // Handle time.\n    };\n\n    // Coffee\n    tvdb.getServerTime (err, time) ->\n      if err? then return\n      # Handle time\n\n`time` is an integer.\n\n\n### Find a TV Show\n\n    // JS\n    tvdb.findTvShow(\"Mad Men\", function(err, tvShows) {\n      if (err) return;\n      // Handle tvShows.\n    };\n\n    # Coffee\n    tvdb.findTvShow \"Mad Men\", (err, tvShows) ->\n      if err? then return\n      # Handle tvShows\n\n`tvShows` is an array of `tvShow` objects which contain following obligatory values:\n\n  - `id` {String}\n  - `language` {String}\n  - `name` {String}\n\nand following optional values:\n\n  - `firstAired` {Date}\n  - `imdbId` {String}\n  - `zap2itId` {String}\n  - `banner` {String}\n  - `overview` {String}\n\n\n\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/enyo/node-tvdb/issues"
  },
  "homepage": "https://github.com/enyo/node-tvdb",
  "_id": "tvdb@0.0.13",
  "_from": "tvdb@"
}
