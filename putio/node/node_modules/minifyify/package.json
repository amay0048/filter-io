{
  "author": {
    "name": "Ben Ng",
    "email": "me@benng.me",
    "url": "http://benng.me"
  },
  "contributors": [
    {
      "name": "Jesús Leganés Combarro 'piranna'",
      "email": "piranna@gmail.com",
      "url": "http://pirannafs.blogspot.com.es"
    }
  ],
  "name": "minifyify",
  "description": "Minify your browserify bundles without losing the sourcemap",
  "keywords": [
    "uglify",
    "browserify",
    "transform",
    "minify",
    "envify",
    "uglifyify",
    "compress"
  ],
  "version": "2.4.1",
  "repository": {
    "type": "git",
    "url": "git://github.com/ben-ng/minifyify.git"
  },
  "main": "./lib",
  "bin": {
    "minifyify": "bin/cmd.js"
  },
  "dependencies": {
    "through": "2.3.x",
    "concat-stream": "1.1.x",
    "source-map": "0.1.x",
    "uglify-js": "https://github.com/ben-ng/UglifyJS2/archive/sourcemap-offset-fix.tar.gz",
    "lodash": "2.3.x",
    "utilities": "0.0.x",
    "atob": "1.1.x",
    "btoa": "1.1.x",
    "jsesc": "0.4.x"
  },
  "peerDependencies": {
    "browserify": "3.x.x"
  },
  "scripts": {
    "test": "jake test --trace"
  },
  "devDependencies": {
    "browserify": "~3.30.0",
    "jake": "0.7.x",
    "jquery-browserify": "latest",
    "sourcemap-validator": "1.0.x",
    "backbone": "1.0.x",
    "hbsfy": "0.1.x",
    "envify": "0.1.x",
    "handlebars-runtime": "1.0.x"
  },
  "optionalDependencies": {},
  "engines": {
    "node": "0.10.x"
  },
  "license": "MIT",
  "readme": "Minifyify\n=========\n#### Tiny, Debuggable Browserify Bundles\n\n[![Build Status](https://travis-ci.org/ben-ng/minifyify.png?branch=master)](https://travis-ci.org/ben-ng/minifyify)\n\n*Now with browserify 3 support*\n\nBefore, browserify made you choose between sane debugging and sane load times. Now, you can have both.\n\nMinifyify takes your browserify bundle and minfies it. The magic: your code still maps back to the original, separate source files.\n\nNow you can deploy a minified bundle in production, and still have a sourcemap handy for when things inevitably break!\n\n## Usage\n\nBundle your app with browserify's debug option, then pipe it to minifyify.\n\n```sh\nbrowserify -d entry.js | minifyify > bundle.min.js\n```\n\n```js\nvar browserify = require('browserify')\n  , minifyify = require('minifyify')\n  , bundle = new browserify()\n  , out = fs.createWriteStream('bundle.min.js')\n  , options // See docs;\n\nbundle('entry.js')\n  .bundle({debug: true})\n  .pipe(minifyify(options))\n  .pipe(out); // output is a minified bundle with an inline source map\n```\n\nYou can also use callbacks to get your code and map in separate files\n\n```js\nbundle('entry.js')\n  .bundle({debug: true})\n  .pipe(minifyify(options, function (err, src, map) {\n    assert.ifError(err);\n    fs.writeFileSync('bundle.min.js', src);\n    fs.writeFileSync('bundle.min.map.json', map);\n  }))\n```\n\n## Options\n\n### [options.compressPath]\n\nShorten the paths you see in the web inspector by defining a compression function.\n\n```\n// A typical compressPaths function\ncompressPaths: function (p) {\n  return path.relative('my-app-root', p);\n}\n```\n\n### [options.map]\n\nIf you are using an external sourcemap, this is the path to it (string), which is added to the bottom of the minified file so browsers can correctly map. [More details here](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-howwork).\n\nSet to `false` to disable source maps.\n\nDefaults to a no-op (absolute paths to all source files).\n\n## FAQ\n\n * Wait.. Why did my bundle get BIGGER??\n\n   It's not immediately obvious, but the more you minify code, the bigger the sourcemap gets. Browserify can get away with merely mapping lines to lines because it is going from uncompressed code to uncompressed code. Minifyify squishes multiple lines together, so the sourcemap has to carry more information.\n\n   **Pull the sourcemap out into a separate file and link to it from the minified source!**\n\n * How does this work?\n\n   Minifyify runs UglifyJS on your bundle, and uses Browserify's inline sourcemap to create a new sourcemap that maps the minified code to the unbundled files.\n\n * Why does the sourcemap cause my debugger to behave erratically?\n\n   Some of the optimizations UglifyJS performs will result in sourcemaps that appear to broken. For example, when UglifyJS uses the comma operator to shorten statements on different lines, a single debugger \"step\" in minified code may execute multiple lines of the original source.\n\n   Another common example of erratic behavior is when code like this is compressed:\n\n   ```\n   var myThing = myFunc('a')\n    , cantGetHere = myFunc('b');\n   ```\n\n   If you set a breakpoint on the second line, your debugger might not pause execution there. I've found that setting the breakpoint on the first line and stepping onto the second line is more reliable.\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Ben Ng\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/ben-ng/minifyify/issues"
  },
  "homepage": "https://github.com/ben-ng/minifyify",
  "_id": "minifyify@2.4.1",
  "dist": {
    "shasum": "376369761b3007cbeca052977e7c656237cd54fa"
  },
  "_from": "minifyify@",
  "_resolved": "https://registry.npmjs.org/minifyify/-/minifyify-2.4.1.tgz"
}
